#!/usr/bin/env node

import { execSync } from 'child_process';
import { existsSync } from 'fs';

const args = process.argv.slice(2);
const testType = args[0] || 'all';

console.log(`üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤: ${testType}`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if (!existsSync('.env')) {
  console.log('‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.');
  console.log('–ü—Ä–∏–º–µ—Ä:');
  console.log('DB_HOST=localhost');
  console.log('DB_PORT=3306');
  console.log('DB_USER=root');
  console.log('DB_PASSWORD=your_password');
  process.exit(1);
}

try {
  switch (testType) {
    case 'unit':
      console.log('üìä –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤...');
      execSync('pnpm test:unit', { stdio: 'inherit' });
      break;
    
    case 'api':
      console.log('üîå –ó–∞–ø—É—Å–∫ API —Ç–µ—Å—Ç–æ–≤...');
      execSync('pnpm test:api', { stdio: 'inherit' });
      break;
    
    case 'components':
      console.log('‚öõÔ∏è  –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...');
      execSync('pnpm test:components', { stdio: 'inherit' });
      break;
    
    case 'e2e':
      console.log('üéØ –ó–∞–ø—É—Å–∫ E2E —Ç–µ—Å—Ç–æ–≤...');
      execSync('pnpm test:e2e', { stdio: 'inherit' });
      break;
    
    case 'coverage':
      console.log('üìà –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º...');
      execSync('pnpm test:coverage', { stdio: 'inherit' });
      break;
    
    case 'all':
    default:
      console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...');
      execSync('pnpm test', { stdio: 'inherit' });
      break;
  }
  
  console.log('‚úÖ –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
} catch (error) {
  console.error('‚ùå –¢–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏:', error.message);
  process.exit(1);
}





